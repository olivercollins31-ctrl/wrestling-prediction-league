{"ast":null,"code":"import _objectSpread from\"/workspaces/wrestling-prediction-league/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';/**\n * Leaderboard page. Displays a table of users and points. The data is\n * mocked here and refreshes every few seconds to emulate live updates.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Leaderboard(){// Initial mock scores\nconst initialScores=[{id:1,name:'Olly',points:12},{id:2,name:'Alex',points:10},{id:3,name:'Jordan',points:8},{id:4,name:'Sam',points:6},{id:5,name:'Taylor',points:4}];const[scores,setScores]=useState(initialScores);// Simulate live updates by randomly adding points to a random player\nuseEffect(()=>{const interval=setInterval(()=>{setScores(prev=>{const updated=prev.map(entry=>_objectSpread({},entry));// pick random index\nconst idx=Math.floor(Math.random()*updated.length);updated[idx].points+=Math.floor(Math.random()*3);// add 0–2 points\n// sort descending by points\nupdated.sort((a,b)=>b.points-a.points);return updated;});},5000);return()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Leaderboard\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"Scores update every few seconds to show live ranking changes.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\",children:\"Points\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:scores.map((entry,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-700\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-700\",children:entry.name}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 text-sm text-gray-700\",children:entry.points})]},entry.id))})]})})]});}export default Leaderboard;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Leaderboard","initialScores","id","name","points","scores","setScores","interval","setInterval","prev","updated","map","entry","_objectSpread","idx","Math","floor","random","length","sort","a","b","clearInterval","className","children","scope","index"],"sources":["/workspaces/wrestling-prediction-league/src/pages/Leaderboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n/**\n * Leaderboard page. Displays a table of users and points. The data is\n * mocked here and refreshes every few seconds to emulate live updates.\n */\nfunction Leaderboard() {\n  // Initial mock scores\n  const initialScores = [\n    { id: 1, name: 'Olly', points: 12 },\n    { id: 2, name: 'Alex', points: 10 },\n    { id: 3, name: 'Jordan', points: 8 },\n    { id: 4, name: 'Sam', points: 6 },\n    { id: 5, name: 'Taylor', points: 4 },\n  ];\n\n  const [scores, setScores] = useState(initialScores);\n\n  // Simulate live updates by randomly adding points to a random player\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setScores((prev) => {\n        const updated = prev.map((entry) => ({ ...entry }));\n        // pick random index\n        const idx = Math.floor(Math.random() * updated.length);\n        updated[idx].points += Math.floor(Math.random() * 3); // add 0–2 points\n        // sort descending by points\n        updated.sort((a, b) => b.points - a.points);\n        return updated;\n      });\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Leaderboard</h2>\n      <p className=\"text-sm text-gray-600 mb-4\">\n        Scores update every few seconds to show live ranking changes.\n      </p>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th\n                scope=\"col\"\n                className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n              >\n                Rank\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n              >\n                User\n              </th>\n              <th\n                scope=\"col\"\n                className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\"\n              >\n                Points\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {scores.map((entry, index) => (\n              <tr key={entry.id}>\n                <td className=\"px-4 py-2 text-sm text-gray-700\">{index + 1}</td>\n                <td className=\"px-4 py-2 text-sm text-gray-700\">{entry.name}</td>\n                <td className=\"px-4 py-2 text-sm text-gray-700\">{entry.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default Leaderboard;"],"mappings":"4HAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB;AACA,KAAM,CAAAC,aAAa,CAAG,CACpB,CAAEC,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,MAAM,CAAE,EAAG,CAAC,CACnC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,MAAM,CAAE,EAAG,CAAC,CACnC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,MAAM,CAAE,CAAE,CAAC,CACpC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,KAAK,CAAEC,MAAM,CAAE,CAAE,CAAC,CACjC,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,QAAQ,CAAEC,MAAM,CAAE,CAAE,CAAC,CACrC,CAED,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAACO,aAAa,CAAC,CAEnD;AACAN,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCF,SAAS,CAAEG,IAAI,EAAK,CAClB,KAAM,CAAAC,OAAO,CAAGD,IAAI,CAACE,GAAG,CAAEC,KAAK,EAAAC,aAAA,IAAWD,KAAK,CAAG,CAAC,CACnD;AACA,KAAM,CAAAE,GAAG,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGP,OAAO,CAACQ,MAAM,CAAC,CACtDR,OAAO,CAACI,GAAG,CAAC,CAACV,MAAM,EAAIW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,CAAC,CAAC,CAAE;AACtD;AACAP,OAAO,CAACS,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAACjB,MAAM,CAAGgB,CAAC,CAAChB,MAAM,CAAC,CAC3C,MAAO,CAAAM,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMY,aAAa,CAACf,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACER,KAAA,QAAKwB,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC7C3B,IAAA,OAAI0B,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cAC5D3B,IAAA,MAAG0B,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,+DAE1C,CAAG,CAAC,cACJ3B,IAAA,QAAK0B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BzB,KAAA,UAAOwB,SAAS,CAAC,qCAAqC,CAAAC,QAAA,eACpD3B,IAAA,UAAO0B,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC3BzB,KAAA,OAAAyB,QAAA,eACE3B,IAAA,OACE4B,KAAK,CAAC,KAAK,CACXF,SAAS,CAAC,iEAAiE,CAAAC,QAAA,CAC5E,MAED,CAAI,CAAC,cACL3B,IAAA,OACE4B,KAAK,CAAC,KAAK,CACXF,SAAS,CAAC,iEAAiE,CAAAC,QAAA,CAC5E,MAED,CAAI,CAAC,cACL3B,IAAA,OACE4B,KAAK,CAAC,KAAK,CACXF,SAAS,CAAC,iEAAiE,CAAAC,QAAA,CAC5E,QAED,CAAI,CAAC,EACH,CAAC,CACA,CAAC,cACR3B,IAAA,UAAO0B,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CACjDnB,MAAM,CAACM,GAAG,CAAC,CAACC,KAAK,CAAEc,KAAK,gBACvB3B,KAAA,OAAAyB,QAAA,eACE3B,IAAA,OAAI0B,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAAEE,KAAK,CAAG,CAAC,CAAK,CAAC,cAChE7B,IAAA,OAAI0B,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAAEZ,KAAK,CAACT,IAAI,CAAK,CAAC,cACjEN,IAAA,OAAI0B,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAAEZ,KAAK,CAACR,MAAM,CAAK,CAAC,GAH5DQ,KAAK,CAACV,EAIX,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}